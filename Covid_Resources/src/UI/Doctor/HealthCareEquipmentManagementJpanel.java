/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Doctor;

import Model.Account;
import Model.DoctorPrescription;
import Model.EcoSystem;
import Model.EnterPrise;
import Model.MedicalEquipStoreEnterPrise;
import Model.Network;
import Model.Organization.Organization;
import Model.Organization.DoctorOrganization;
import Model.Organization.EquipmentHandlingOrganization;
import Model.PrescriptionRepo;
import Model.WorkQueue.Doctor_WorkRequest;
import Model.WorkQueue.HealthCareEquipment_WorkRequest;
import Model.WorkQueue.Work_Request;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author srikanthchilaka
 */
public class HealthCareEquipmentManagementJpanel extends javax.swing.JPanel {

    private DoctorPrescription doc_pres;
    private Doctor_WorkRequest doc_req;
    private EnterPrise enter;
    private Account acc;
    private JPanel upperContainer;
    private DoctorOrganization doctor_Org;
    private PrescriptionRepo p_repo;
    private EcoSystem eco;
    private Network ntwk;
    private EnterPrise.EntType enttype;
    private EquipmentHandlingOrganization eqhandle;
    private MedicalEquipStoreEnterPrise medenter;

    /**
     * Creates new form HealthCareEquipmentManagementJpanel
     */
    public HealthCareEquipmentManagementJpanel(JPanel upperContainer, Account acc, DoctorOrganization doctor_Org, EnterPrise enter, EcoSystem eco, Network ntwk) {
        initComponents();
        this.upperContainer = upperContainer;
        this.acc = acc;
        this.enter = enter;
        this.doctor_Org = doctor_Org;
        this.ntwk = ntwk;
        this.eco = eco;

        populateWorkTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelscroll1 = new javax.swing.JScrollPane();
        tblMedEq = new javax.swing.JTable();
        labelurglevel = new javax.swing.JLabel();
        comburgency = new javax.swing.JComboBox();
        labelquantity = new javax.swing.JLabel();
        textfieldquantity = new javax.swing.JSpinner();
        buttonback = new javax.swing.JButton();
        buttonrequest = new javax.swing.JButton();
        labelheader = new javax.swing.JLabel();
        labelmeqequip = new javax.swing.JLabel();
        comequip = new javax.swing.JComboBox();
        buttonrefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));

        tblMedEq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEDICAL EQUIPMENT", "MESSAGE", "QUANTITY", "SENDER", "RECEIVER", "STATUS", "REQUEST DATE", "ACTUAL PRICE", "LOAN PRICE"
            }
        ));
        panelscroll1.setViewportView(tblMedEq);

        labelurglevel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelurglevel.setForeground(new java.awt.Color(0, 51, 153));
        labelurglevel.setText("URGENCY LEVEL:");

        comburgency.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please select--", "VERY CRITICAL(<2 HRS)", "MODERATE(<5 HRS)", "LOW PRIORITY(24 HRS)" }));
        comburgency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comburgencyActionPerformed(evt);
            }
        });

        labelquantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelquantity.setForeground(new java.awt.Color(0, 51, 153));
        labelquantity.setText("QUANTITY:");

        buttonback.setBackground(new java.awt.Color(0, 51, 153));
        buttonback.setForeground(new java.awt.Color(255, 255, 255));
        buttonback.setText("<<Back");
        buttonback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonbackActionPerformed(evt);
            }
        });

        buttonrequest.setBackground(new java.awt.Color(153, 153, 153));
        buttonrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/request.png"))); // NOI18N
        buttonrequest.setText("Request");
        buttonrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonrequestActionPerformed(evt);
            }
        });

        labelheader.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        labelheader.setForeground(new java.awt.Color(0, 51, 153));
        labelheader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelheader.setText("REQUEST MEDICAL EQUIPMENT");

        labelmeqequip.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelmeqequip.setForeground(new java.awt.Color(0, 51, 153));
        labelmeqequip.setText("MEDICAL EQUIPMENT:");

        comequip.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please Select--", "Oxygen Cylinder", "Pulse Oxymeter", "Stretcher", "Thermometer", "Stethescope", "Diabetes Machine", "COVID Testing Kits", "Syringes", "Blood pressure Kit", " " }));
        comequip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comequipActionPerformed(evt);
            }
        });

        buttonrefresh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonrefresh.setText("Refresh");
        buttonrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonrefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelheader)
                .addGap(100, 100, 100)
                .addComponent(buttonrefresh)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelscroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelmeqequip, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelurglevel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonback, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonrequest, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(comburgency, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                .addComponent(comequip, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(127, 127, 127)
                        .addComponent(labelquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labelheader, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(panelscroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelmeqequip, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comequip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelurglevel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comburgency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonback)
                    .addComponent(buttonrequest))
                .addContainerGap(168, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comburgencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comburgencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comburgencyActionPerformed

    private void buttonbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonbackActionPerformed
        upperContainer.remove(this);
        CardLayout layout = (CardLayout) upperContainer.getLayout();
        layout.previous(upperContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_buttonbackActionPerformed

    private void buttonrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonrequestActionPerformed
        HealthCareEquipment_WorkRequest request = new HealthCareEquipment_WorkRequest();
        request.setEquipName(comequip.getSelectedItem().toString());
        request.setSender(acc);
        request.setStatus("Sent");
        request.setUrgencyLevel(comburgency.getSelectedItem().toString());

        request.setQuantity(Integer.parseInt(textfieldquantity.getValue().toString()));

        Date date = new Date();
        int min = 20;
        int max = 40;
        Random rand = new Random();

        int n1 = rand.nextInt((max - min)) + 1;
        int n2 = rand.nextInt(10) + 1;

        request.setActualprice(n1);
        request.setHospitalName(enter.getOrgName());

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        request.setRequestDate(dateFormat.format(date));
        request.setLoanprice(n2);
        Organization org = null;
        for (Organization organization : enter.getOrgaDirectory().getOrganizations()) {
            if (organization instanceof DoctorOrganization) {
                org = organization;
                System.out.println("****" + org);
                break;
            }
        }
        org.getWQ().getWorkRequestList().add(request);
        acc.getWorkQ().getWorkRequestList().add(request);
        // equiporg.getWorkQueue().getWorkRequestList().add(request);
        System.out.println("****** " + org.getOrgName());
        System.out.println("******" + enter.getOrgName());
        System.out.println("**** " + ntwk.getNetwork_name());
        for (Network network : eco.getNetworks()) {

            if (ntwk.getNetwork_name().equals(this.ntwk.getNetwork_name())) {
                for (EnterPrise ent : ntwk.getEnterpriseRepo().getEnterpRepo()) {
                    System.out.println("****" + ent.getOrgName());
                    System.out.println("******" + ent.getEnterprise_type());
                    for (Organization organization : ent.getOrgaDirectory().getOrganizations()) {
                        System.out.println("***** Organizatio Name:" + organization.getOrgName());
                        if (organization.getOrgName().equals("Equipment Organization")) {
                            System.out.println("True");
                            System.out.println("***** organization Name" + organization.getOrgName());
                            organization.getWQ().getWorkRequestList().add(request);
                        }
                    }
                }

            }
            acc.getWorkQ().getWorkRequestList().add(request);
            populateWorkTable();
        }       
    }//GEN-LAST:event_buttonrequestActionPerformed

    private void comequipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comequipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comequipActionPerformed

    private void buttonrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonrefreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonrefreshActionPerformed

    private void populateWorkTable() {
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

        DefaultTableModel model = (DefaultTableModel) tblMedEq.getModel();

        model.setRowCount(0);
        for (Work_Request request : doctor_Org.getWQ().getWorkRequestList()) {
            Object[] row = new Object[9];

            row[0] = ((HealthCareEquipment_WorkRequest) request);
            String urgencyLevel = ((HealthCareEquipment_WorkRequest) request).getUrgencyLevel();
            row[1] = urgencyLevel;
            int quantity = ((HealthCareEquipment_WorkRequest) request).getQuantity();
            row[2] = quantity;
            row[3] = request.getSender();
            row[4] = ((HealthCareEquipment_WorkRequest) request).getReceiver();
            row[5] = request.getStatus();

            String expectedArrivalTime = ((HealthCareEquipment_WorkRequest) request).getExpectedArrivalTime();

            row[6] = request.getRequestDate();
            row[7] = ((HealthCareEquipment_WorkRequest) request).getActualprice();
            row[8] = ((HealthCareEquipment_WorkRequest) request).getLoanprice();

            model.addRow(row);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonback;
    private javax.swing.JButton buttonrefresh;
    private javax.swing.JButton buttonrequest;
    private javax.swing.JComboBox comburgency;
    private javax.swing.JComboBox comequip;
    private javax.swing.JLabel labelheader;
    private javax.swing.JLabel labelmeqequip;
    private javax.swing.JLabel labelquantity;
    private javax.swing.JLabel labelurglevel;
    private javax.swing.JScrollPane panelscroll1;
    private javax.swing.JTable tblMedEq;
    private javax.swing.JSpinner textfieldquantity;
    // End of variables declaration//GEN-END:variables

}
