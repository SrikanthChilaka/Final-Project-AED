/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

/**
 *
 * @author harshinichandrika
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DoctorList;
import model.Doctor;

public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateJPanel
     */
    DoctorList doctr;
    public UpdateJPanel() {
        initComponents();
        initComponents();
        this.doctr = doctr;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     public boolean isEmpty(String c){
        return c != null && c.length() ==0;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDocID = new javax.swing.JTextField();
        txtHospID = new javax.swing.JTextField();
        lblDocName = new javax.swing.JLabel();
        lblViewDoctor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoc = new javax.swing.JTable();
        btnUpdateDoc = new javax.swing.JButton();
        lblDocHospUN = new javax.swing.JLabel();
        lblDocID = new javax.swing.JLabel();
        txtDocUN = new javax.swing.JTextField();
        lblHospID = new javax.swing.JLabel();
        lblDocPass = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        txtDocPass = new javax.swing.JTextField();

        lblDocName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocName.setText("Doctor Name :");

        lblViewDoctor.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblViewDoctor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewDoctor.setText("Update Doctor Details");

        tblDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor Name", "Doctor ID", "Hospital ID"
            }
        ));
        tblDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoc);

        btnUpdateDoc.setText("Update");
        btnUpdateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDocActionPerformed(evt);
            }
        });

        lblDocHospUN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocHospUN.setText("Doctor Username :");

        lblDocID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocID.setText("Doctor ID :");

        lblHospID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHospID.setText("Hospital ID :");

        lblDocPass.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDocPass.setText("Doctor Password :");

        txtDocPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocPassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(lblViewDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDocID)
                                .addComponent(lblDocName)
                                .addComponent(lblHospID))
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDocName)
                                .addComponent(txtDocID)
                                .addComponent(txtHospID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(86, 86, 86)
                            .addComponent(btnUpdateDoc)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDocPass)
                            .addComponent(lblDocHospUN))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDocUN, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDocPass, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblViewDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocName)
                    .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocID)
                    .addComponent(txtDocID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocHospUN)
                    .addComponent(txtDocUN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocPass)
                    .addComponent(txtDocPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(btnUpdateDoc)
                .addContainerGap(422, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDocMouseClicked
        // TODO add your handling code here:'
        int selectedRowIndex = tblDoc.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a doctor profile to Update");
            return;
        }
        DefaultTableModel model= (DefaultTableModel) tblDoc.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        txtDocName.setText(String.valueOf(selectedDoctor.getDocName()));
        txtDocID.setText(selectedDoctor.getDocID());
        txtHospID.setText(selectedDoctor.getHospID());
        txtDocUN.setText(selectedDoctor.getDocUsername());
        txtDocPass.setText(selectedDoctor.getDocPass());
    }//GEN-LAST:event_tblDocMouseClicked

    private void btnUpdateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDocActionPerformed
        // TODO add your handling code here:
        if(doctr!=null){
            DefaultTableModel model= (DefaultTableModel) tblDoc.getModel();
            if(tblDoc.getSelectedRowCount() == 1){

                if(isEmpty(txtDocName.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter Doctor Name");
                    return;
                }
                String doctName = txtDocName.getText();

                if(isEmpty(txtDocID.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter Doctor ID");
                    return;
                }
                String doctID = txtDocID.getText();

                if(isEmpty(txtHospID.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter Hospital ID");
                    return;
                }
                String hospiID = txtHospID.getText();
                if(isEmpty(txtDocUN.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter Doc Username");
                    return;
                }
                String docUN = txtDocUN.getText();

                if(isEmpty(txtDocPass.getText())) {
                    JOptionPane.showMessageDialog(this, "Please enter Doc Password");
                    return;
                }
                int selectedRowIndex = tblDoc.getSelectedRow();

                Doctor doc = doctr.getDoctr().get(selectedRowIndex);
                doc.setDocName(doctName);
                doc.setDocID(doctID);
                doc.setHospID(hospiID);
                doc.setDocID(doctID);
                doc.setHospID(hospiID);
            }

            JOptionPane.showMessageDialog(this, "The record has been updated successfully");
            populateTable();
        }

        else{
            JOptionPane.showMessageDialog(this,"Row empty.");
        }

    }//GEN-LAST:event_btnUpdateDocActionPerformed

    private void txtDocPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocPassActionPerformed
  private void populateTable() {
        DefaultTableModel model= (DefaultTableModel) tblDoc.getModel();
        model.setRowCount(0);
        
        for(Doctor doc : doctr.getDoctr()){
            Object[] row = new Object[5];
            row[0] = doc;
            row[1] = doc.getDocID();
            row[2] = doc.getHospID();
            row[3] = doc.getDocUsername();
            row[4] = doc.getDocPass();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateDoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDocHospUN;
    private javax.swing.JLabel lblDocID;
    private javax.swing.JLabel lblDocName;
    private javax.swing.JLabel lblDocPass;
    private javax.swing.JLabel lblHospID;
    private javax.swing.JLabel lblViewDoctor;
    private javax.swing.JTable tblDoc;
    private javax.swing.JTextField txtDocID;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtDocPass;
    private javax.swing.JTextField txtDocUN;
    private javax.swing.JTextField txtHospID;
    // End of variables declaration//GEN-END:variables
}
